@model CreateCharacterViewModel
@inject IDBHelper DBHelper

@{
    ViewData["Title"] = "Edit " + Model.Name;
}

<h1>Edit @Model.Name</h1>

<hr />
<div>
    <form asp-action="Edit">
        @{await Html.RenderPartialAsync("_CharacterCreationPartial", Model);}
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary" />
            <input type="button" value="Cancel" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Characters")'" />
        </div>
    </form>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/characterCreate.js"></script>
    <script type="text/javascript">
        const Model = @Html.Raw(Json.Serialize(Model));
        var numClasses = 0;
        for (var i = 0; i < @Model.Classes.Count; i++) {
            if (Model.classes[i][0] > 0) {
                var classDiv = document.getElementById("Class" + i);
                classDiv.hidden = false;
                updateSubclasses(i);
                numClasses++;
            }
        }
    </script>
}
