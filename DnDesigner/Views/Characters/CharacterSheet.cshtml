@model CharacterSheetViewModel

@{
    ViewData["Title"] = Model.Character.Name + " Character Sheet";
}

<h2>@Model.Character.Name</h2>
<h3>
    Level @Model.Character.Level
    @foreach (CharacterClass Class in Model.Character.Classes)
    {
        string classString = "";
        if (Class.Subclass != null)
        {
            classString = Class.Subclass.Name + " ";
        }
        classString += Class.Class.Name + " ";
        if(Model.Character.Classes.Count > 1)
        {
            classString += Class.Level + " ";
        }
        @Html.DisplayFor(modelItem => classString);
    }
</h3>
<h4>@Model.Character.Race.Name @Model.Character.Background.Name</h4>
<h5>@Model.Character.Alignment</h5>

<!--Edit / Level Up Button-->
<input type="button" value="Edit/Level Up" class="btn btn-primary" onclick="location.href='@Url.Action("Edit", "Characters", new {id = Model.Character.CharacterId})'" />
<hr />

<!--Roll Toast Box-->
<div class="toast-container w-50 top-1 start-50 translate-middle">
    <div id="rollToast" class="toast w-100" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <h3 class="me-auto">
            </h3>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <h2 class="toast-body">
        </h2>
    </div>
</div>

<form asp-action="CharacterSheet">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <!--Start of Character Sheet Layout-->
    <div class="container">

        <!--Rest / Hit Die / Die Roller / Equipment / Add Items Button bar-->
        <div class="btn-toolbar justify-content-between" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-toolbar" role="toolbar">
                <div class="btn-group me-2" role="group">
                    <input type="checkbox" class="btn-check" role="button" id="saveToggle" data-bs-toggle="collapse"
                           data-bs-target="#saves" aria-expanded="false" aria-controls="saves" aria-pressed="true">
                    <label class="btn btn-outline-primary" for="saveToggle">Saves</label>
                </div>
                <div class="btn-group me-2" role="group">
                    <input type="checkbox" class="btn-check" role="button" id="skillToggle" data-bs-toggle="collapse"
                           data-bs-target="#skills" aria-expanded="false" aria-controls="skills" aria-pressed="true">
                    <label class="btn btn-outline-primary" for="skillToggle">Skills</label>
                </div>
                <div class="btn-group me-2" role="group">
                    <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#longRestModal">
                        Long Rest
                    </button>
                </div>
                <div class="btn-group me-2" role="group">
                    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#shortRestModal">
                        Short Rest
                    </button>
                </div>
                <div class="btn-group me-2" role="group">
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#hitDieModal">
                        Hit Dice
                    </button>
                </div>
                <div class="input-group me-2">
                    <label class="input-group-text">Die Roller</label>
                    <input id="dieCount" type="number" class="form-control" placeholder="0" min="1" max="99" aria-label="Die roller">
                    <select class="form-select" id="dieSize">
                        <option value="4" >d4</option>
                        <option value="6" >d6</option>
                        <option value="8" >d8</option>
                        <option value="10" >d10</option>
                        <option value="12" >d12</option>
                        <option value="20" >d20</option>
                        <option value="100" >d100</option>
                    </select>
                    <button class="btn btn-primary" type="button" onclick="DieRoller()">Roll</button>
                </div>
            </div>
            <div class="btn-toolbar" role="toolbar">
                <div class="btn-group me-2" role="group">
                    <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#equipmentModal">
                        Equipment
                    </button>
                </div>
                <div class="btn-group me-2" role="group">
                    <button type="button" class="btn btn-secondary" data-bs-toggle="modal" data-bs-target="#addItemsModal">
                        Add Items
                    </button>
                </div>
            </div>

        </div>
        <br>

        <!--Long Rest Modal-->
        <div class="modal fade" id="longRestModal" tabindex="-1" aria-labelledby="longRestLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="longRestLabel">Long Rest</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <h5>Place holder for what player gets back</h5>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success">Complete Long Rest</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Short Rest Modal-->
        <div class="modal fade" id="shortRestModal" tabindex="-1" aria-labelledby="shortRestLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="shortRestLabel">Short Rest</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <h5>Place holder for what player gets back</h5>
                        <h5>Hit Dice Available</h5>
                        <div id="lockedHitDice" class="d-flex flex-column">
                            @{
                                if (Model.Character.MaxHitDice[0] != 0)
                                {
                                    <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d6HitDiceAvailable" id="d6HitDiceAvailable" type="number" class="form-control"
                                               value="@Model.Character.d6HitDiceAvailable" min="0" max="20" disabled="disabled"
                                               aria-label="d6 Hit Dice Available" />
                                        <label class="input-group-text">d6</label>
                                    </div>
                                    <br />
                                }
                                if (Model.Character.MaxHitDice[1] != 0)
                                {
                                    <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d8HitDiceAvailable" id="d8HitDiceAvailable" type="number" class="form-control"
                                               value="@Model.Character.d8HitDiceAvailable" min="0" max="20" disabled="disabled"
                                               aria-label="d8 Hit Dice Available" />
                                        <label class="input-group-text">d8</label>
                                    </div>
                                    <br />
                                }
                                if (Model.Character.MaxHitDice[2] != 0)
                                {
                                    <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d10HitDiceAvailable" id="d10HitDiceAvailable" type="number" class="form-control"
                                               value="@Model.Character.d10HitDiceAvailable" min="0" max="20" disabled="disabled"
                                               aria-label="d10 Hit Dice Available" />
                                        <label class="input-group-text">d10</label>
                                    </div>
                                    <br />
                                }
                                if (Model.Character.MaxHitDice[3] != 0)
                                {
                                    <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d12HitDiceAvailable" id="d12HitDiceAvailable" type="number" class="form-control"
                                               value="@Model.Character.d12HitDiceAvailable" min="0" max="20" disabled="disabled"
                                               aria-label="d12 Hit Dice Available" />
                                        <label class="input-group-text">d12</label>
                                    </div>
                                    <br />
                                }
                            }
                        </div>
                        <h5>Spend hit dice</h5>
                        <div class="input-group mx-auto w-50">
                            <label class="input-group-text">Hit Die</label>
                            <select class="form-select" id="spendHitDie">
                                @{
                                    if (Model.Character.MaxHitDice[0] != 0)
                                    {
                                        <option value="6">d6</option>
                                    }
                                    if (Model.Character.MaxHitDice[1] != 0)
                                    {
                                        <option value="8">d8</option>
                                    }
                                    if (Model.Character.MaxHitDice[2] != 0)
                                    {
                                        <option value="10">d10</option>
                                    }
                                    if (Model.Character.MaxHitDice[3] != 0)
                                    {
                                        <option value="12">d12</option>
                                    }
                                }
                            </select>
                            <button class="btn btn-primary" type="button" onclick="RollHitDice(@Model.Character.GetModifier("Constitution"))">Roll</button>
						</div>
                        <br />
                        <div class="input-group me-2">
                            <label class="input-group-text">Total Health Rolled (Includes Constitution Modifier)</label>
                            <input id="totalHitDieRoll" type="number" class="form-control" value="0" placeholder="0" min="0" disabled="disabled" aria-label="Total Health Rolled" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" data-bs-dismiss="modal" onclick="AddRolledHealth()">Complete Short Rest</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Hit Die Modal-->
        <div class="modal fade" id="hitDieModal" tabindex="-1" aria-labelledby="hitDieLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="hitDieLabel">Hit Dice</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <h5>Total Hit Dice</h5>
                        @{
                            if (Model.Character.MaxHitDice[0] != 0)
                            {
                                <h3>@Model.Character.MaxHitDice[0] d6</h3>
                            }
                            if (Model.Character.MaxHitDice[1] != 0)
                            {
                                <h3>@Model.Character.MaxHitDice[1] d8</h3>
                            }
                            if (Model.Character.MaxHitDice[2] != 0)
                            {
                                <h3>@Model.Character.MaxHitDice[2] d10</h3>
                            }
                            if (Model.Character.MaxHitDice[3] != 0)
                            {
                                <h3>@Model.Character.MaxHitDice[3] d12</h3>
                            }
                        }                            
                        <br>
                        <h5>Hit Dice Available</h5>
                        <div id="unlockedHitDice" class="d-flex flex-column">
                        @{
                            if (Model.Character.MaxHitDice[0] != 0)
                            {
                                <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d6HitDiceAvailable" id="d6HitDiceAvailable" type="number" class="form-control"
                                               value="@Model.Character.d6HitDiceAvailable" min="0" max="@Model.Character.MaxHitDice[0]" 
                                        aria-label="d6 Hit Dice Available" />
                                    <label class="input-group-text">d6</label>
                                </div>
                                <br />
                            }
                            if (Model.Character.MaxHitDice[1] != 0)
                            {
                                <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d8HitDiceAvailable" id="d8HitDiceAvailable" type="number" class="form-control"
                                        value="@Model.Character.d8HitDiceAvailable" min="0" max="@Model.Character.MaxHitDice[1]"
                                        aria-label="d8 Hit Dice Available" />
                                    <label class="input-group-text">d8</label>
                                    </div>
                                    <br />
                            }
                            if (Model.Character.MaxHitDice[2] != 0)
                            {
                                <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d10HitDiceAvailable" id="d10HitDiceAvailable" type="number" class="form-control"
                                        value="@Model.Character.d10HitDiceAvailable" min="0" max="@Model.Character.MaxHitDice[2]"
                                        aria-label="d10 Hit Dice Available" />
                                    <label class="input-group-text">d10</label>
                                    </div>
                                    <br />
                            }
                            if (Model.Character.MaxHitDice[3] != 0)
                            {
                                <div class="input-group mx-auto w-25">
                                        <input asp-for="Character.d12HitDiceAvailable" id="d12HitDiceAvailable" type="number" class="form-control"
                                        value="@Model.Character.d12HitDiceAvailable" min="0" max="@Model.Character.MaxHitDice[3]"
                                        aria-label="d12 Hit Dice Available" />
                                    <label class="input-group-text">d12</label>
                                    </div>
                                }
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success" data-bs-dismiss="modal" onclick="UpdateHitDice()">Update Hit Dice</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Equipment Modal-->
        <div class="modal fade" id="equipmentModal" tabindex="-1" aria-labelledby="equipmentLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="equipmentLabel">Equipment</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body text-center">
                        <h5>Place holder for equipment</h5>
                        <h5>Hands</h5>
                        <h5>Armor</h5>
                        <h5>Attunement</h5>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success">Save Equipment</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Add Items Modal-->
        <div class="modal fade" id="addItemsModal" tabindex="-1" aria-labelledby="addItemsLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h1 class="modal-title fs-5" id="equipmentLabel">Add Items</h1>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="accordion" id="allItems">
                            @{
                                string accordionName = "itemAccordion";
                                int accordionNum = 1;
                                string accordionID;
                                string itemCount = "itemCount";
                                string itemID;
                                foreach(Item currentItem in Model.AllItems)
                                {
                                    accordionID = accordionName + accordionNum;
                                    itemID = itemCount + accordionNum;
                                    <div class="accordion-item" id="allItems">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button collapsed" type="button" 
                                            data-bs-toggle="collapse" data-bs-target="#@accordionID" 
                                            aria-expanded="false" aria-controls="@accordionID">
                                                @currentItem.Name
                                            </button>
                                        </h2>
                                        <div id="@accordionID" class="accordion-collapse collapse">
                                            <br/>
                                            <div class="input-group mx-auto w-50 text-center">
                                                <label class="input-group-text">Quantity</label>
                                                <input id="@itemID" type="number" value="1" min="1" 
                                                class="form-control" aria-label="Item quantity"/>
                                                <button type="button" class="btn btn-success" 
                                                onclick=
                                                    'AddItem("@itemID", "@currentItem.Name", "@currentItem.Sourcebook",
                                                            "@currentItem.Traits", "@currentItem.Price", "@currentItem.Weight",
                                                            "@currentItem.Attuneable", "@currentItem.Description", "@currentItem.ItemId")'
                                                >Add</button>
                                            </div>
                                            <div class="accordion-body">
                                                <h5>@currentItem.Sourcebook</h5>
                                                <h6>@currentItem.Traits</h6>
                                                <h6>Price: @currentItem.Price</h6>
                                                <h6>Weight: @currentItem.Weight</h6>
                                                @{
                                                    if (currentItem.Attuneable)
                                                    {
                                                        <h6>Requires Attunement</h6>
                                                    }
                                                }
                                                <p>@currentItem.Description</p>
                                            </div>
                                        </div>
                                    </div>
                                    accordionNum++;
                                }
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-success">Save Items</button>
                    </div>
                </div>
            </div>
        </div>

        <!--Flex div open-->
        <div class="row flex-nowrap">

            <!--Saves & Skills-->
            <div class="col-auto text-center">
                <div class="collapse collapse-horizontal" id="saves">
                    <ul class="list-group" style="width: 12rem;">
                        @foreach (CharacterProficiency save in Model.Character.GetProficienciesByType("saving throw"))
                        {
                            <!--Get save bonus and generate id strings-->
                            int? modifier = save.GetRollBonus();
                            string saveId = save.Proficiency.ProficiencyId.ToString();
                            string saveSingleD20Message = save.Proficiency.Name.ToString();
                            string saveAdvMessage = save.Proficiency.Name.ToString() + " at Advantage";
                            string saveDisMessage = save.Proficiency.Name.ToString() + " at Disadvantage";
                            string saveBtnSingleD20 = "singleD20";
                            string saveBtnAdv = "adv";
                            string saveBtnDis = "dis";
                            if (modifier != 0)
                            {
                                saveBtnSingleD20 = "singleD20_mod";
                                saveBtnAdv = "adv_mod";
                                saveBtnDis = "dis_mod";
                            }
                            <!--Populate save list item-->
                            if (save.ProficiencyLevel == 1)
                            {
                                <li class="list-group-item">@modifier @save.Proficiency.Name P</li>
                            }
                            else
                            {
                                <li class="list-group-item">@modifier @save.Proficiency.Name</li>
                            }
                            <!--Populate save roll buttons-->
                            <li class="list-group-item">
                                @if (modifier == 0)
                                {
                                    <button type="button" class="btn btn-sm btn-danger" onclick="SkillOrSaveRoll('@saveBtnDis', '@saveDisMessage')">Dis</button>
                                    <button type="button" class="btn btn-sm btn-primary" onclick="SkillOrSaveRoll('@saveBtnSingleD20', '@saveSingleD20Message')">D20</button>
                                    <button type="button" class="btn btn-sm btn-success" onclick="SkillOrSaveRoll('@saveBtnAdv', '@saveAdvMessage')">Adv</button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-sm btn-danger" onclick="SkillOrSaveModRoll('@saveBtnDis', '@saveDisMessage', '@modifier')">Dis</button>
                                    <button type="button" class="btn btn-sm btn-primary" onclick="SkillOrSaveModRoll('@saveBtnSingleD20', '@saveSingleD20Message' , '@modifier')">D20</button>
                                    <button type="button" class="btn btn-sm btn-success" onclick="SkillOrSaveModRoll('@saveBtnAdv', '@saveAdvMessage', '@modifier')">Adv</button>
                                }
                            </li>
                        }
                    </ul>
                </div>
                <br>
                <div class="collapse collapse-horizontal" id="skills">
                    <ul class="list-group" style="width: 12rem;">
                        @foreach (CharacterProficiency skill in Model.Character.GetProficienciesByType("skill"))
                        {
                            <!--Get skill bonus and generate id strings-->
                            int? modifier = skill.GetRollBonus();
                            string skillId = skill.Proficiency.ProficiencyId.ToString();
                            string skillSingleD20Message = skill.Proficiency.Name.ToString();
                            string skillAdvMessage = skill.Proficiency.Name.ToString() + " at Advantage";
                            string skillDisMessage = skill.Proficiency.Name.ToString() + " at Disadvantage";
                            string skillBtnSingleD20 = "singleD20";
                            string skillBtnAdv = "adv";
                            string skillBtnDis = "dis";
                            if (modifier != 0)
                            {
                                skillBtnSingleD20 = "singleD20_mod";
                                skillBtnAdv = "adv_mod";
                                skillBtnDis = "dis_mod";
                            }
                            <!--Populate skill list item-->
                            if (skill.ProficiencyLevel == 1)
                            {
                                <li class="list-group-item">@modifier @skill.Proficiency.Name P</li>
                            }
                            else if (skill.ProficiencyLevel == 2)
                            {
                                <li class="list-group-item">@modifier @skill.Proficiency.Name E</li>
                            }
                            else
                            {
                                <li class="list-group-item">@modifier @skill.Proficiency.Name</li>
                            }
                            <!--Populate skill roll buttons-->
                            <li class="list-group-item">
                                @if (modifier == 0)
                                {
                                    <button type="button" class="btn btn-sm btn-danger" onclick="SkillOrSaveRoll('@skillBtnDis', '@skillDisMessage')">Dis</button>
                                    <button type="button" class="btn btn-sm btn-primary" onclick="SkillOrSaveRoll('@skillBtnSingleD20', '@skillSingleD20Message')">D20</button>
                                    <button type="button" class="btn btn-sm btn-success" onclick="SkillOrSaveRoll('@skillBtnAdv', '@skillAdvMessage')">Adv</button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-sm btn-danger" onclick="SkillOrSaveModRoll('@skillBtnDis', '@skillDisMessage', '@modifier')">Dis</button>
                                    <button type="button" class="btn btn-sm btn-primary" onclick="SkillOrSaveModRoll('@skillBtnSingleD20', '@skillSingleD20Message', '@modifier')">D20</button>
                                    <button type="button" class="btn btn-sm btn-success" onclick="SkillOrSaveModRoll('@skillBtnAdv', '@skillAdvMessage', '@modifier')">Adv</button>
                                }
                            </li>
                        }
                    </ul>
                </div>
            </div>

            <!--Main Sheet Area-->
            <div class="col">
                <!--Stat Cards-->
                <div class="row row-cols-xl-6">
                    <div class="col">
                        <div class="card text-center mb-3" style="width: 10rem;">
                            <div class="card-body">
                                <h5 class="card-title">Strength</h5>
                                <h3>@Model.Character.Strength</h3>
                                <h5>@Model.Character.GetModifier("Strength")</h5>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card text-center mb-3" style="width: 10rem;">
                            <div class="card-body">
                                <h5 class="card-title">Dexterity</h5>
                                <h3>@Model.Character.Dexterity</h3>
                                <h5>@Model.Character.GetModifier("Dexterity")</h5>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card text-center mb-3" style="width: 10rem;">
                            <div class="card-body">
                                <h5 class="card-title">Constitution</h5>
                                <h3>@Model.Character.Constitution</h3>
                                <h5>@Model.Character.GetModifier("Constitution")</h5>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card text-center mb-3" style="width: 10rem;">
                            <div class="card-body">
                                <h5 class="card-title">Intelligence</h5>
                                <h3>@Model.Character.Intelligence</h3>
                                <h5>@Model.Character.GetModifier("Intelligence")</h5>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card text-center mb-3" style="width: 10rem;">
                            <div class="card-body">
                                <h5 class="card-title">Wisdom</h5>
                                <h3>@Model.Character.Wisdom</h3>
                                <h5>@Model.Character.GetModifier("Wisdom")</h5>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="card text-center mb-3" style="width: 10rem;">
                            <div class="card-body">
                                <h5 class="card-title">Charisma</h5>
                                <h3>@Model.Character.Charisma</h3>
                                <h5>@Model.Character.GetModifier("Charisma")</h5>
                            </div>
                        </div>
                    </div>
                </div>

                <!--Info Cards-->
                <div class="container">
                    <div class="row row-cols-1 row-cols-lg-2 row-cols-xl-4">
                        <div class="col">
                            <div class="card text-center mb-3 h-100" style="width: 14rem;">
                                <div class="card-body">
                                    <h5 class="card-title">Proficiency</h5>
                                    <h3>@Model.Character.ProficiencyBonus</h3>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">Initiative</h5>
                                    <h3>@Model.Character.GetModifier("Dexterity")</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="card text-center mb-3 h-100" style="width: 14rem;">
                                <div class="card-body">
                                    <h5 class="card-title">Max Health</h5>
                                    <input type="hidden" asp-for="Character.MaxHealth" />
                                    <h3>@Model.Character.MaxHealth</h3>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">Armor Class</h5>
                                    <input type="hidden" asp-for="Character.BaseArmorClass" />
                                    <input type="hidden" asp-for="Character.BonusArmorClass" />
                                    <h3>@Model.Character.ArmorClass</h3>
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="card text-center mb-3 h-100" style="width: 14rem;">
                                <div class="card-body">
                                    <h5 class="card-title">Current Health</h5>
                                    <div class="input-group input-group-lg">
                                        <input asp-for="Character.CurrentHealth" id="currentHealth" value="@Model.Character.CurrentHealth" type="number" max="@Model.Character.MaxHealth" min="0" class="form-control text-center">
                                    </div>
                                </div>
                                <div class="card-body">
                                    <h5 class="card-title">Temp Health</h5>
                                    <div class="input-group input-group-lg">
                                        <input asp-for="Character.TempHealth" type="number" min="0" class="form-control text-center" />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col">
                            <div class="card text-center mb-3 h-100" style="width: 14rem;">
                                <div class="card-body">
                                    <div class="card-body">
                                        <h5 class="card-title">Walking Speed</h5>
                                        <input type="hidden" asp-for="Character.WalkingSpeed" />
                                        <h3>@Model.Character.WalkingSpeed</h3>
                                    </div>
                                    <div class="card-body">
                                        <h5 class="card-title">Death Saves</h5>
                                        <label for="successes">Successes</label>
                                        <br>
                                        <input id="successes" type="checkbox">
                                        <input id="successes" type="checkbox">
                                        <input id="successes" type="checkbox">
                                        <br>
                                        <label for="failures">Failures</label>
                                        <br>
                                        <input id="failures" type="checkbox">
                                        <input id="failures" type="checkbox">
                                        <input id="failures" type="checkbox">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <br>

                <!--Character Accordion-->
                <div class="accordion" id="CharacterSheet">
                    <!--Action Area-->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-BasicActions" aria-expanded="true"
                                    aria-controls="panelsStayOpen-BasicActions">
                                Actions
                            </button>
                        </h2>
                        <div id="panelsStayOpen-BasicActions" class="accordion-collapse collapse show">
                            <div class="accordion-body">
                                <strong>Placeholder for weapon attacks?</strong>
                            </div>
                        </div>
                    </div>
                    <!--Spell Area-->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-Spells" aria-expanded="false" aria-controls="panelsStayOpen-Spells">
                                Spells? If the character has none don't make this one?
                            </button>
                        </h2>
                        <div id="panelsStayOpen-Spells" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <strong>Maybe another accordion here for all spell levels?</strong>
                                <div class="accordion" id="accordionExample">
                                    <div class="accordion-item">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                                    data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                                Cantrips
                                            </button>
                                        </h2>
                                        <div id="collapseOne" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                            <div class="accordion-body">
                                                <div class="row row-cols-md-1 row-cols-lg-2 row-cols-xxl-3">
                                                    <div class="col">
                                                        <div class="card text-center" style="width: 20rem;">
                                                            <div class="card-body">
                                                                <h5 class="card-title">Spell Name</h5>
                                                                <h6 class="card-subtitle mb-2 text-body-secondary">School</h6>
                                                                <h6 class="mb-2">Casting Time: Action</h6>
                                                                <h6 class="mb-2">Range: Touch</h6>
                                                                <h6 class="mb-2">Components: V, S, M</h6>
                                                                <h6 class="mb-2">Duration: Instant</h6>
                                                                <p>Description</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col">
                                                        <div class="card text-center" style="width: 20rem;">
                                                            <div class="card-body">
                                                                <h5 class="card-title">Spell Name</h5>
                                                                <h6 class="card-subtitle mb-2 text-body-secondary">School</h6>
                                                                <h6 class="mb-2">Casting Time: Action</h6>
                                                                <h6 class="mb-2">Range: Touch</h6>
                                                                <h6 class="mb-2">Components: V, S, M</h6>
                                                                <h6 class="mb-2">Duration: Instant</h6>
                                                                <p>Description</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col">
                                                        <div class="card text-center" style="width: 20rem;">
                                                            <div class="card-body">
                                                                <h5 class="card-title">Spell Name</h5>
                                                                <h6 class="card-subtitle mb-2 text-body-secondary">School</h6>
                                                                <h6 class="mb-2">Casting Time: Action</h6>
                                                                <h6 class="mb-2">Range: Touch</h6>
                                                                <h6 class="mb-2">Components: V, S, M</h6>
                                                                <h6 class="mb-2">Duration: Instant</h6>
                                                                <p>Description</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col">
                                                        <div class="card text-center" style="width: 20rem;">
                                                            <div class="card-body">
                                                                <h5 class="card-title">Spell Name</h5>
                                                                <h6 class="card-subtitle mb-2 text-body-secondary">School</h6>
                                                                <h6 class="mb-2">Casting Time: Action</h6>
                                                                <h6 class="mb-2">Range: Touch</h6>
                                                                <h6 class="mb-2">Components: V, S, M</h6>
                                                                <h6 class="mb-2">Duration: Instant</h6>
                                                                <p>Description</p>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="accordion-item">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                                    data-bs-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                                Spell Slots Used
                                            </button>
                                        </h2>
                                        <div id="collapseTwo" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                            <div class="accordion-body">
                                                <strong>Loop to populate checkboxes for each spell slot the player has</strong>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="accordion-item">
                                        <h2 class="accordion-header">
                                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                                    data-bs-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                                                1st Level Spells
                                            </button>
                                        </h2>
                                        <div id="collapseThree" class="accordion-collapse collapse" data-bs-parent="#accordionExample">
                                            <div class="accordion-body">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--Feature Area-->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-Features" aria-expanded="false" aria-controls="panelsStayOpen-Features">
                                Features
                            </button>
                        </h2>
                        <div id="panelsStayOpen-Features" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <div class="accordion" id="Features">
                                    @foreach (CharacterFeature characterFeature in Model.Character.Features)
                                    {
                                        Feature feature = characterFeature.Feature;
                                        <div class="accordion-item">
                                            <h2 class="accordion-header">
                                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                                        data-bs-target="#panelsStayOpen-@feature.FeatureId" aria-expanded="false"
                                                        aria-controls="panelsStayOpen-@feature.FeatureId">
                                                    @feature.ToString()
                                                </button>
                                            </h2>
                                            <div id="panelsStayOpen-@feature.FeatureId" class="accordion-collapse collapse">
                                                <div class="accordion-body">
                                                    <strong>
                                                        @feature.Description
                                                    </strong>
                                                    @if (characterFeature.Choices.Any())
                                                    {
                                                        <p>
                                                            You chose the following options:
                                                            <br />
                                                            @foreach (CharacterChoice characterChoice in characterFeature.Choices)
                                                            {
                                                                @characterChoice.ToString() 
                                                                <br />
                                                            }
                                                        </p>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--Inventory Area-->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-Inventory" aria-expanded="false"
                                    aria-controls="panelsStayOpen-Inventory">
                                Inventory
                            </button>
                        </h2>
                        <div id="panelsStayOpen-Inventory" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <!--Money Div-->
                                <div class="input-group mx-auto">
                                    <input asp-for="@Model.Character.Inventory.Platinum" id="platinum" type="number" class="form-control text-center"
                                           value="@Model.Character.Inventory.Platinum" min="0"
                                           aria-label="platinum" />
                                    <label class="input-group-text">Platinum</label>
                                    <input asp-for="@Model.Character.Inventory.Gold" id="gold" type="number" class="form-control text-center"
                                           value="@Model.Character.Inventory.Gold" min="0"
                                           aria-label="gold" />
                                    <label class="input-group-text">Gold</label>
                                    <input asp-for="@Model.Character.Inventory.Electrum" id="electrum" type="number" class="form-control text-center"
                                           value="@Model.Character.Inventory.Electrum" min="0"
                                           aria-label="electrum" />
                                    <label class="input-group-text">Electrum</label>
                                    <input asp-for="@Model.Character.Inventory.Silver" id="silver" type="number" class="form-control text-center"
                                           value="@Model.Character.Inventory.Silver" min="0"
                                           aria-label="silver" />
                                    <label class="input-group-text">Silver</label>
                                    <input asp-for="@Model.Character.Inventory.Copper" id="copper" type="number" class="form-control text-center"
                                           value="@Model.Character.Inventory.Copper" min="0"
                                           aria-label="copper" />
                                    <label class="input-group-text">Copper</label>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="col-2 overflow-auto" style="max-height:20rem;">
                                        <div id="inventoryLinks" 
                                        class="d-flex flex-column gap-2 simple-list-example-scrollspy text-center">
                                            @{
                                                int itemLinkNum = 0;
                                                string itemLinkId = "item";
                                                foreach (InventoryItem item in Model.Character.Inventory.Items)
                                                {
                                                    string thisLinkId = itemLinkId + itemLinkNum;
                                                    <a class="p-1 rounded" href="#@thisLinkId">@item.Item.Name</a>
                                                    itemLinkNum++;
                                                }
                                            }
                                        </div>
                                    </div>
                                    <div class="col-10 overflow-auto" style="max-height:30rem;">
                                        <div id="inventoryList" data-bs-spy="scroll" data-bs-target="#inventoryLinks" 
                                        data-bs-offset="0" data-bs-smooth-scroll="true" 
                                        class="scrollspy-example" tabindex="0">
                                            @{
                                                int itemListNum = 0;
                                                string itemListId = "item";
                                                foreach (InventoryItem item in Model.Character.Inventory.Items)
                                                {
                                                    string thisListId = itemListId + itemListNum;
                                                    <h4 id="@itemListId">@item.Item.Name</h4>
                                                    <div class="input-group w-25">
                                                        <label class="input-group-text">Quantity</label>
                                                        <input type="number" value="@item.Quantity" min="0"
                                                               class="form-control" aria-label="Item quantity" />                                                        
                                                    </div>
                                                    <h5>@item.Item.Sourcebook</h5>
                                                    <h6>@item.Item.Traits</h6>
                                                    <h6>Price: @item.Item.Price</h6>
                                                    <h6>Weight: @item.Item.Weight</h6>                                                    
                                                    if (item.Item.Attuneable)
                                                    {
                                                        <h6>Requires Attunement</h6>
                                                    }
                                                    <p>@item.Item.Description</p>
                                                    itemListNum++;
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!--Proficiencies Area-->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-Languages" aria-expanded="false"
                                    aria-controls="panelsStayOpen-Languages">
                                Proficiencies
                            </button>
                        </h2>
                        <div id="panelsStayOpen-Languages" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <ol class="list-group list-group">
                                    @{
                                        List<CharacterProficiency> languageProf = Model.Character.GetProficienciesByType("language");
                                        if (languageProf.Count > 0)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">Language</div>
                                                    <ul class="list-group list-group-flush">
                                                        @foreach (CharacterProficiency language in languageProf)
                                                        {
                                                            <li class="list-group-item">@language.Proficiency.Name</li>
                                                        }
                                                    </ul>
                                                </div>
                                            </li>
                                        }
                                    }
                                    @{
                                        List<CharacterProficiency> toolProf = Model.Character.GetProficienciesByType("tool");
                                        if (toolProf.Count > 0)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">Tool</div>
                                                    <ul class="list-group list-group-flush">
                                                        @foreach (CharacterProficiency tool in toolProf)
                                                        {
                                                            <li class="list-group-item">@tool.Proficiency.Name</li>
                                                        }
                                                    </ul>
                                                </div>
                                            </li>
                                        }
                                    }
                                    @{
                                        List<CharacterProficiency> armorProf = Model.Character.GetProficienciesByType("armor");
                                        if (armorProf.Count > 0)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">Armor</div>
                                                    <ul class="list-group list-group-flush">
                                                        @foreach (CharacterProficiency armor in armorProf)
                                                        {
                                                            <li class="list-group-item">@armor.Proficiency.Name</li>
                                                        }
                                                    </ul>
                                                </div>
                                            </li>
                                        }
                                    }
                                    @{
                                        List<CharacterProficiency> weaponProf = Model.Character.GetProficienciesByType("weapon");
                                        if (weaponProf.Count > 0)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">Weapon</div>
                                                    <ul class="list-group list-group-flush">
                                                        @foreach (CharacterProficiency weapon in weaponProf)
                                                        {
                                                            <li class="list-group-item">@weapon.Proficiency.Name</li>
                                                        }
                                                    </ul>
                                                </div>
                                            </li>
                                        }
                                    }
                                    @{
                                        List<CharacterProficiency> instrumentProf = Model.Character.GetProficienciesByType("instrument");
                                        if (instrumentProf.Count > 0)
                                        {
                                            <li class="list-group-item d-flex justify-content-between align-items-start">
                                                <div class="ms-2 me-auto">
                                                    <div class="fw-bold">Instrument</div>
                                                    <ul class="list-group list-group-flush">
                                                        @foreach (CharacterProficiency instrument in instrumentProf)
                                                        {
                                                            <li class="list-group-item">@instrument.Proficiency.Name</li>
                                                        }
                                                    </ul>
                                                </div>
                                            </li>
                                        }
                                    }
                                </ol>
                            </div>
                        </div>
                    </div>
                    <!--Notes Area-->
                    <div class="accordion-item">
                        <h2 class="accordion-header">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                    data-bs-target="#panelsStayOpen-Notes" aria-expanded="false"
                                    aria-controls="panelsStayOpen-Notes">
                                Notes
                            </button>
                        </h2>
                        <div id="panelsStayOpen-Notes" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <textarea asp-for="Character.PlayerNotes" style="width: 100%; min-height:15rem"></textarea>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!--Flex div close-->

    </div>
    <!--End of Character Sheet Layout-->
    <!--Hidden Storage Start-->
    <input id="characterId" value="@Model.Character.CharacterId" type="hidden" asp-for="Character.CharacterId" />
    <input type="hidden" asp-for="Character.Name" />
    <input type="hidden" asp-for="Character.Alignment" />
    <input type="hidden" asp-for="Character.Race" />
    <input type="hidden" asp-for="Character.Race.RaceId" />
    <input type="hidden" asp-for="Character.Race.Name" />
    <input type="hidden" asp-for="Character.Background" />
    <input type="hidden" asp-for="Character.Background.BackgroundId" />
    <input type="hidden" asp-for="Character.Background.Name" />
    <input type="hidden" asp-for="Character.Level" />
    <input type="hidden" asp-for="Character.Classes" />
    <input type="hidden" asp-for="Character.Features" />
    <input type="hidden" asp-for="Character.d6HitDiceAvailable" />
    <input type="hidden" asp-for="Character.d8HitDiceAvailable" />
    <input type="hidden" asp-for="Character.d10HitDiceAvailable" />
    <input type="hidden" asp-for="Character.d12HitDiceAvailable" />
    <input type="hidden" asp-for="Character.Strength" />
    <input type="hidden" asp-for="Character.Dexterity" />
    <input type="hidden" asp-for="Character.Constitution" />
    <input type="hidden" asp-for="Character.Intelligence" />
    <input type="hidden" asp-for="Character.Wisdom" />
    <input type="hidden" asp-for="Character.Charisma" />
    <input type="hidden" asp-for="Character.Inventory" />
    <input type="hidden" asp-for="Character.Inventory.InventoryId" />
    <input type="hidden" asp-for="Character.CharacterEffects" />
    <input type="hidden" asp-for="Character.UserId" />
    <input type="hidden" asp-for="Character.Inventory" />
    <!--Hidden Storage End-->
    <!-- Left over from generated code (possible later implementation)
    <div class="form-group">
        <label asp-for="Resistances" class="control-label"></label>
        <input asp-for="Resistances" class="form-control" />
        <span asp-validation-for="Resistances" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Immunities" class="control-label"></label>
        <input asp-for="Immunities" class="form-control" />
        <span asp-validation-for="Immunities" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Vulnerabilities" class="control-label"></label>
        <input asp-for="Vulnerabilities" class="form-control" />
        <span asp-validation-for="Vulnerabilities" class="text-danger"></span>
    </div>
    -->

    <br>

    <!--Exit Character Sheet Button Bar-->
    <div class="form-group btn-toolbar justify-content-between" role="toolbar" aria-label="Toolbar with button groups" role="toolbar">
        <div class="btn-toolbar" role="toolbar">
            <div class="btn-group me-2" role="group">
                <input type="submit" value="Save and exit" class="btn btn-primary" />
            </div>
            <div class="btn-group me-2" role="group">
                <input type="button" value="Exit w/o Saving" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Characters")'" />
            </div>
        </div>
    </div>
</form>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script src="/js/dice.js"></script>
    <script src="/js/items.js"></script>
}